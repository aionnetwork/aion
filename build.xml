<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="pack_build" name="Create modulized runnable JAR for Project aion0">
	<!--this file was created by Eclipse Runnable JAR Export Wizard-->
	<!--ANT 1.10 is required                                        -->
	<!--define folder properties-->
	<property name="project.name" value="aion" />
	<property name="dir.srcfile" value="./src" />
	<property name="dir.libfile" value="./lib" />
	<property name="dir.modfile" value="./mod" />
	<property name="dir.workspace" value="./" />
	<property name="dir.buildfile" value="./build/main" />
	<property name="dir.build.native" value="./build/main/native" />
	<property name="dir.test" value="./build/test" />
	<property name="dir.jarfile" value="${dir.workspace}/build" />
	<property name="dir.native" value="./native" />
	<property name="dir.pack" value="./pack" />
	<property name="test.report.dir" value="report" />
	<property name="compile.debug" value="on" />
    <property name="vm.version" value="0.2.1" />

	<path id="cp">
		<pathelement location="${dir.libfile}/slf4j-api-1.7.25.jar" />
		<pathelement location="${dir.libfile}/commons-codec-1.10.jar" />
		<pathelement location="${dir.libfile}/commons-collections4-4.0.jar" />
		<pathelement location="${dir.libfile}/commons-lang3-3.4.jar" />
		<pathelement location="${dir.libfile}/guava-19.0.jar" />
		<pathelement location="${dir.libfile}/h2-mvstore-1.4.196.jar" />
		<pathelement location="${dir.libfile}/jctools-core-1.2.1.jar" />
		<pathelement location="${dir.libfile}/leveldb-api-0.9.jar" />
		<pathelement location="${dir.libfile}/leveldbjni-all-1.18.3.jar" />
		<pathelement location="${dir.libfile}/libnmapdb.jar" />
		<pathelement location="${dir.libfile}/libnsc.jar" />
		<pathelement location="${dir.libfile}/libnzmq.jar" />
		<pathelement location="${dir.libfile}/protobuf-java-3.5.0.jar" />
		<pathelement location="${dir.libfile}/libJson.jar" />
		<pathelement location="${dir.libfile}/logback-classic-1.2.3.jar" />
		<pathelement location="${dir.libfile}/logback-core-1.2.3.jar" />
		<pathelement location="${dir.libfile}/libminiupnp/miniupnpc_linux.jar" />
		<pathelement location="${dir.modfile}/modEvtMgr.jar" />
		<pathelement location="${dir.modfile}/modEvtMgrImpl.jar" />
		<pathelement location="${dir.modfile}/modLogger.jar" />
		<pathelement location="${dir.modfile}/modP2p.jar" />
		<pathelement location="${dir.modfile}/modP2pImpl.jar" />
		<pathelement location="${dir.modfile}/modAionBase.jar" />
		<pathelement location="${dir.modfile}/modTxPool.jar" />
		<pathelement location="${dir.modfile}/modTxPoolImpl.jar" />
		<pathelement location="${dir.modfile}/modDbImpl.jar" />
		<pathelement location="${dir.modfile}/modRlp.jar" />
		<pathelement location="${dir.modfile}/modCrypto.jar" />
		<pathelement location="${dir.modfile}/modAion.jar" />
		<pathelement location="${dir.modfile}/modAionImpl.jar" />
		<pathelement location="${dir.modfile}/modApiServer.jar" />
		<pathelement location="${dir.modfile}/modFastVM.jar" />
		<pathelement location="${dir.modfile}/modMcf.jar" />
		<pathelement location="${dir.modfile}/modBoot.jar" />
		<pathelement location="${dir.modfile}/modGui.jar" />
		<pathelement location="${dir.modfile}/modPrecompiled.jar" />
        <pathelement location="${dir.modfile}/modVM.jar" />
	</path>

	<path id="test.lib">
		<pathelement location="${dir.libfile}/hamcrest/hamcrest-all-1.3.jar" />
		<pathelement location="${dir.libfile}/hamcrest/hamcrest-core-1.3.jar" />
		<pathelement location="${dir.libfile}/junit_4/junit-4.12.jar" />
		<pathelement location="${dir.libfile}/junit_4/system-rules-1.16.0.jar" />
		<pathelement location="${dir.libfile}/mockito-core-2.12.0.jar" />
		<pathelement location="${dir.libfile}/truth-0.36.jar" />
		<pathelement location="${dir.libfile}/byte-buddy-1.7.9.jar" />
		<pathelement location="${dir.libfile}/byte-buddy-agent-1.7.9.jar" />
		<pathelement location="${dir.libfile}/objenesis-2.6.jar" />
		<pathelement location="${dir.libfile}/JUnitParams-1.1.1.jar" />
	</path>

	<target name="test_modules">
		<ant inheritAll="false" antfile="${dir.workspace}/modCrypto/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modP2pImpl/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modTxPoolImpl/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modRlp/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modDbImpl/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAion/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAionBase/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAionImpl/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modMcf/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modGui/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/aion_fastvm/modFastVM/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modPrecompiled/build.xml" target="test" />
	</target>

	<target name="ci_test_modules">
        <echo message="${dir.workspace}"/>
		<ant inheritAll="false" antfile="${dir.workspace}/modCrypto/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modP2pImpl/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modTxPoolImpl/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modRlp/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modDbImpl/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAion/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAionBase/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAionImpl/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/modMcf/build.xml" target="ci_build" />
		<ant inheritAll="false" antfile="${dir.workspace}/aion_fastvm/modFastVM/build.xml" target="test" />
		<ant inheritAll="false" antfile="${dir.workspace}/modGui/build.xml" target="test" />
        <ant inheritAll="false" dir="${dir.workspace}/modGui" antfile="build.xml" target="integtest" />
		<ant inheritAll="false" antfile="${dir.workspace}/modPrecompiled/build.xml" target="test" />
	</target>

	<!--<target name="test_build" depends="build">
		<mkdir dir="${dir.test}" />
		<javac debug="on" debuglevel="source,lines,vars" includeantruntime="false" release="9" destdir="${dir.test}" includes="**/*.java">
			<src path="./aion_fastvm/java/src" />
			<src path="./aion_fastvm/java/test" />
			<classpath>
				<path refid="cp" />
				<path refid="test.lib" />
				<pathelement location="${dir.buildfile}" />
			</classpath>
		</javac>

		<javac debug="on" debuglevel="source,lines,vars" includeantruntime="false" release="9" srcdir="./test" destdir="${dir.test}" includes="system-integration/kernel/**/*Test.java">
			<classpath>
				<path refid="cp" />
				<path refid="test.lib" />
				<pathelement location="${dir.test}" />
				<pathelement location="./aion.jar" />
			</classpath>
		</javac>
	</target>-->

	<!--<target name="test" depends="test_build">
		<mkdir dir="${test.report.dir}" />
		<junit printsummary="on" haltonfailure="no" fork="true">
			<jvmarg line="add-modules java.xml.bind" />
			<classpath>
				<path refid="test.lib" />
				<path refid="cp" />
				<pathelement location="${dir.buildfile}" />
				<pathelement location="${dir.test}" />
				<pathelement location="./src/main/resource" />
				<pathelement location="aion_fastvm/java/test" />
				<pathelement location="./native" />
			</classpath>

			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="src/libMcf/test" includes="**/*Test.java" />
				<fileset dir="src/libPow/test" includes="**/*Test.java" />
				<fileset dir="src/libAion/test" includes="**/*Test.java" />
				<fileset dir="src/libAionApi/test" includes="**/*Test.java" />
				<fileset dir="aion_fastvm/java/test" includes="**/*Test.java" />
				<fileset dir="test/system-integration/kernel" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>-->

	<target name="logenv">
		<echo message="ANT_VERSION: ${ant.version}"/>
		<echo message="JAVA_VERSION: ${java.version}"/>
		<echo message="JAVA_HOME: ${java.home}"/>
	</target>

	<target name="test" depends="clean, build, test_modules_collect_reports" />

	<target name="ci_build" depends="clean, build, ci_test_modules_collect_reports" />

	<macrodef name="macro_collect_reports">
		<attribute name="src" />
		<attribute name="dest" />
		<sequential>
			<copy todir="@{dest}">
				<fileset dir="@{src}" />
			</copy>
		</sequential>
	</macrodef>

	<target name="test_modules_collect_reports" depends="test_modules">
		<mkdir dir="${test.report.dir}" />
		<macro_collect_reports src="modAionBase/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modCrypto/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modP2pImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modTxPoolImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modRlp/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modDbImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="aion_fastvm/modFastVM/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modAionImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modPrecompiled/report" dest="${test.report.dir}" />
	</target>

	<target name="ci_test_modules_collect_reports" depends="ci_test_modules">
		<mkdir dir="${test.report.dir}" />
		<macro_collect_reports src="modAionBase/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modCrypto/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modP2pImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modTxPoolImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modRlp/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modDbImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="aion_fastvm/modFastVM/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modAionImpl/report" dest="${test.report.dir}" />
		<macro_collect_reports src="modPrecompiled/report" dest="${test.report.dir}" />
	</target>

	<target name="clean_build" depends="logenv, clean, fastbuild" />

    <target name="clean_fullbuild" depends="logenv, clean, sourcebuild" />

	<target name="build_test" depends="build, test" />

	<target name="mod_build">
                <mkdir dir="${dir.modfile}" />
		<echo message="compile debug is ${compile.debug}" />

		<echo message="building modAionBase" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAionBase/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modLogger" />
		<ant inheritAll="false" antfile="${dir.workspace}/modLogger/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modRlp" />
		<ant inheritAll="false" antfile="${dir.workspace}/modRlp/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modP2p" />
		<ant inheritAll="false" antfile="${dir.workspace}/modP2p/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modP2pImpl" />
		<ant inheritAll="false" antfile="${dir.workspace}/modP2pImpl/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modCrypto" />
		<ant inheritAll="false" antfile="${dir.workspace}/modCrypto/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modTxPool" />
		<ant inheritAll="false" antfile="${dir.workspace}/modTxPool/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modTxPoolImpl" />
		<ant inheritAll="false" antfile="${dir.workspace}/modTxPoolImpl/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modEvtMgr" />
		<ant inheritAll="false" antfile="${dir.workspace}/modEvtMgr/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modEvtMgrImpl" />
		<ant inheritAll="false" antfile="${dir.workspace}/modEvtMgrImpl/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modDbImpl" />
		<ant inheritAll="false" antfile="${dir.workspace}/modDbImpl/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modMcf" />
		<ant inheritAll="false" antfile="${dir.workspace}/modMcf/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modAion" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAion/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

        <echo message="building modVM" />
        <ant inheritAll="false" antfile="${dir.workspace}/modVM/build.xml" target="clean_build">
            <property name="compile.debug" value="${compile.debug}" />
        </ant>

		<echo message="building modPrecompiled" />
		<ant inheritall="false" antfile="${dir.workspace}/modPrecompiled/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modFastVM" />
		<ant inheritAll="false" antfile="${dir.workspace}/aion_fastvm/modFastVM/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modAionImpl" />
		<ant inheritAll="false" antfile="${dir.workspace}/modAionImpl/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modApiServer" />
		<ant inheritAll="false" antfile="${dir.workspace}/modApiServer/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

		<echo message="building modBoot" />
		<ant inheritAll="false" antfile="${dir.workspace}/modBoot/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
        </ant>

        <echo message="building aion_api" />
		<ant inheritAll="false" antfile="${dir.workspace}/aion_api/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
        </ant>

        <echo message="building modGui" />
		<ant inheritAll="false" antfile="${dir.workspace}/modGui/build.xml" target="clean_build">
			<property name="compile.debug" value="${compile.debug}" />
		</ant>

                <echo message="building modApi" />
                <ant inheritAll="false" antfile="${dir.workspace}/aion_api/build.xml" target="clean_build">
                        <property name="compile.debug" value="${compile.debug}" />
                </ant>
	</target>

	<target name="build" depends="mod_build">
		<mkdir dir="${dir.buildfile}" />
		<mkdir dir="${dir.native}/linux/equihash" />
		<mkdir dir="${dir.build.native}/linux/equihash" />

		<copy includeemptydirs="false" todir="./build/native">
			<fileset dir="./modAionImpl/src/org/aion/equihash/native" />
		</copy>

		<copy includeemptydirs="false" todir="./build/native">
			<fileset dir="./modAionImpl/build/native" />
		</copy>

		<property environment="env" />
		<fail unless="env.JAVA_HOME" message="JAVA_HOME not set" />

		<!-- Set environment variable for LD_LIBRARY_PATH-->

		<exec executable="g++" failonerror="true">
			<!-- <arg line="-fPIC -shared -I${env.JAVA_HOME}/include -I${env.JAVA_HOME}/include/linux -I./build/native -march=native -m64 -std=c++11 -Wall -Wno-deprecated-declarations -D_POSIX_C_SOURCE=200112L -O3 ./build/native/equi.h ./build/native/equi_miner.h ./build/native/equiMiner.cpp ./build/native/blake/blake2b.cpp -lsodium -o ./build/native/equiMiner.so "/> -->
			<!-- <arg line="-fPIC -shared -I${env.JAVA_HOME}/include -I${env.JAVA_HOME}/include/linux -I./build/native -I${dir.native}/linux/sodium -march=native -m64 -std=c++11 -Wall -Wno-deprecated-declarations -D_POSIX_C_SOURCE=200112L -O3 ./build/native/equi.h ./build/native/equi_miner.h ./build/native/equiMiner.cpp ./build/native/blake/blake2b.cpp -L${dir.workspace}/native/linux/sodium -lsodium -o ./build/native/equiMiner.so -Wl,-rpath,${dir.native}/linux/sodium"/> -->
			<arg line="-fPIC -shared -I${env.JAVA_HOME}/include -I${env.JAVA_HOME}/include/linux -I${dir.build.native} -I${dir.native}/linux/sodium -mtune=generic -m64 -std=c++11 -Wall -Wno-deprecated-declarations -D_POSIX_C_SOURCE=200112L -O3 ./build/native/equi.h ./build/native/equi_miner.h ./build/native/equiMiner.cpp -L${dir.workspace}/native/linux/sodium -lsodium -o ${dir.native}/linux/equihash/equiMiner.so -Wl,-rpath,${dir.native}/linux/sodium" />
		</exec>

	</target>

	<target name="fastbuild" depends="build">
		<exec executable="wget">
                        <arg line="-nc https://github.com/aionnetwork/aion_fastvm/releases/download/v${vm.version}/fastvm_v${vm.version}.tar.gz" />
                </exec>
                <exec executable="tar">
                        <arg line="-xf fastvm_v${vm.version}.tar.gz -C native/linux" />
                </exec>
                <move file="native/linux/fastvm_v${vm.version}" tofile="native/linux/fastvm" overwrite="true" />

                <exec executable="wget">
                        <arg line="-nc https://github.com/aionnetwork/aion_fastvm/releases/download/v${vm.version}/solidity_v${vm.version}.tar.gz" />
                </exec>
                <exec executable="tar">
                        <arg line="-xf solidity_v${vm.version}.tar.gz -C native/linux" />
                </exec>
                <move file="native/linux/solidity_v${vm.version}" tofile="native/linux/solidity" overwrite="true" />
        </target>

        <target name="sourcebuild" depends="build">
                <exec executable="/bin/bash">
                        <arg value="${dir.workspace}/aion_fastvm/scripts/release.sh" />
			<arg value="${vm.version}" />
			<arg value="1" />
                </exec>

                <exec executable="tar">
                        <arg line="-xf fastvm_v${vm.version}.tar.gz -C native/linux" />
                </exec>
                <move file="native/linux/fastvm_v${vm.version}" tofile="native/linux/fastvm" overwrite="true" />

                <exec executable="tar">
                        <arg line="-xf solidity_v${vm.version}.tar.gz -C native/linux" />
                </exec>
                <move file="native/linux/solidity_v${vm.version}" tofile="native/linux/solidity" overwrite="true" />
        </target>


	<target name="clean">
		<delete dir="./build" />
		<delete dir="${test.report.dir}" />
		<delete dir="${dir.pack}/config" />
		<delete dir="${dir.pack}/web3" />
		<delete file="${dir.pack}/aion.tar.bz2" />
		<delete dir="${dir.modfile}" />
	</target>

	<target name="pack_build" depends="logenv">
		<antcall target="clean_build">
			<param name="compile.debug" value="off" />
		</antcall>
		<antcall target="pack" />
	</target>

        <target name="full_build" depends="logenv">
                <antcall target="clean_fullbuild">
                        <param name="compile.debug" value="off" />
                </antcall>
                <antcall target="pack" />
        </target>


	<target name="pre_build">
	        <echo message="execute prebuild script"/>
                <exec executable="/bin/bash">
                        <arg value="${dir.workspace}/script/prebuild.sh" />
                </exec>
	</target>

	<target name="pack">
		<mkdir dir="${dir.pack}" />
		<delete file="${dir.pack}/aion.tar.gz" />
		<exec executable="/bin/bash">
			<arg value="${dir.workspace}/script/prepack.sh" />
		</exec>
		<tar destfile="${dir.pack}/aion.tar.bz2" compression="bzip2" longfile="gnu">
			<tarfileset dir="${dir.libfile}" filemode="755" prefix="${project.name}/lib">
				<include name="*.jar" />
				<include name="libminiupnp/*.jar" />
				<include name="libminiupnp/*.so" />
				<exclude name="byte-buddy-*.jar" />
				<exclude name="JUnitParams-*.jar" />
				<exclude name="mockito-*.jar" />
				<exclude name="objenesis-*.jar" />
				<exclude name="truth-*.jar" />
			</tarfileset>
                        <tarfileset dir="${dir.modfile}" filemode="755" prefix="${project.name}/mod">
                                <include name="*.jar" />
                        </tarfileset>
			<tarfileset dir="${dir.native}" filemode="755" prefix="${project.name}/native">
				<include name="**" />
			</tarfileset>
			<tarfileset dir="${dir.workspace}" filemode="755" prefix="${project.name}">
				<include name="aion.sh" />
			</tarfileset>
			<tarfileset dir="${dir.pack}/config" filemode="755" prefix="${project.name}/config">
				<include name="**" />
			</tarfileset>
			<tarfileset dir="${dir.pack}/rt" filemode="755" prefix="${project.name}/rt">
				<include name="**" />
			</tarfileset>
			<tarfileset dir="${dir.pack}/web3" filemode="755" prefix="${project.name}/web3">
				<include name="**" />
			</tarfileset>
                        <tarfileset dir="${dir.pack}/docs" filemode="755" prefix="${project.name}/docs">
                                <include name="**" />
                        </tarfileset>
                        <tarfileset dir="${dir.pack}/clientAPI" filemode="755" prefix="${project.name}/clientAPI">
                                <include name="**" />
                        </tarfileset>
		</tar>
		<exec executable="/bin/bash">
			<arg value="${dir.workspace}/script/postpack.sh" />
		</exec>
	</target>
</project>
