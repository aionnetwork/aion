<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="modAionBase">  
    <property name="dir.lib" value="../lib" />
    <property name="dir.mod" value="../mod" />
    <property name="dir.javaAPIlib" value="../javaAPIlib" />
    <property name="main.build.dir" value="build/main" />
    <property name="main.src.dir" value="src" />
    <property name="test.build.dir" value="build/test" />
    <property name="test.src.dir" value="test" />
    <property name="test.report.dir" value="report" />

    <!-- Paths -->
    <path id="classpath.test">
        <pathelement location="${dir.lib}/junit_4/junit-4.12.jar"/>
        <pathelement location="${dir.lib}/hamcrest/hamcrest-core-1.3.jar"/>
        <pathelement location="${dir.lib}/guava-19.0.jar"/>
        <pathelement location="${dir.lib}/truth-0.36.jar"/>
        <pathelement location="${main.build.dir}"/>
    </path>

    <target name="clean">
        <delete dir="${main.build.dir}" includeEmptyDirs="true" />
        <delete dir="${test.build.dir}" includeEmptyDirs="true" />
        <delete dir="${test.report.dir}" includeEmptyDirs="true" />
        <delete file="${dir.lib}/modAionBase.jar" />
    </target>

    <!-- Build Related -->

    <target name="compile">
        <echo message="compiling with debug=${compile.debug}" />
        <mkdir dir="${main.build.dir}" />
        <copy includeemptydirs="false" todir="${main.src.dir}">
            <file file="module-info.java" />
        </copy>
        <javac
            debug="${compile.debug}"
            debuglevel="source,lines,vars"
            includeantruntime="false"
            release="9"
            srcdir="${main.src.dir}"
            destdir="${main.build.dir}"
            includes="**/*.java, module-info.java"
            />
        <delete file="src/module-info.java" />
    </target>

    <target name="build">
        <antcall target="compile">
            <param name="compile.debug" value="${compile.debug}"/>
        </antcall>

        <jar
            destfile="modAionBase.jar"
            filesetmanifest="mergewithoutmain"
            basedir="${main.build.dir}"
            />
        <move includeemptydirs="false" todir="${dir.mod}">
            <file file="modAionBase.jar"/>
        </move>
    </target>

    <target name="clean_build" depends="clean" >
        <antcall target="build">
            <param name="compile.debug" value="${compile.debug}"/>
        </antcall>
    </target>

    <target name="test-compile" depends="compile">
        <mkdir dir="${test.build.dir}" />
        <javac
            debug="true"
            debuglevel="source,lines,vars"
            includeantruntime="false"
            release="9"
            srcdir="${test.src.dir}"
            destdir="${test.build.dir}"
            >
            <classpath refid="classpath.test" />
        </javac>
    </target>

    <target name="ci_test-compile" depends="compile">
        <mkdir dir="${test.build.dir}" />
        <javac
            debug="true"
            debuglevel="source,lines,vars"
            includeantruntime="false"
            release="9"
            srcdir="${test.src.dir}"
            destdir="${test.build.dir}"
            >
            <classpath refid="classpath.test" />
        </javac>
    </target>

    <target name="compile_v8">
        <mkdir dir="${main.build.dir}" />
        <javac
            debug="${compile.debug}"
            debuglevel="source,lines,vars"
            includeantruntime="false"
            srcdir="${main.src.dir}"
            destdir="${main.build.dir}"
            includes="**/*.java"
            />
    </target>

    <target name="build_v8" depends="compile_v8">
        <jar
            destfile="libAionBase.jar"
            filesetmanifest="mergewithoutmain"
            basedir="${main.build.dir}"
            />
        <copy includeemptydirs="false" todir="${dir.javaAPIlib}">
            <file file="libAionBase.jar"/>
        </copy>
    </target>

    <target name="clean_build_v8" depends="clean, build_v8" />

    <!-- Test Related -->
    <target name="test" depends="test-compile">
        <mkdir dir="${test.report.dir}" />
        <junit
            printsummary="yes"
            haltonfailure="yes"
            fork="true"
            >
        <classpath>
            <path refid="classpath.test" />
            <pathelement location="${test.build.dir}" />
        </classpath>
        <formatter type="plain" usefile="false"/>
        <formatter type="xml" />
        <batchtest todir="${test.report.dir}">
            <fileset dir="${test.src.dir}" includes="**/*Test.java"/>
        </batchtest>
        </junit>
    </target>

    <!-- CI Build Test Related -->
    <target name="ci_build" depends="ci_test-compile">
        <mkdir dir="${test.report.dir}" />
        <junit
            printsummary="yes"
            haltonfailure="no"
            fork="true"
            >
        <classpath>
            <path refid="classpath.test" />
            <pathelement location="${test.build.dir}" />
        </classpath>
        <formatter type="plain" usefile="false"/>
        <formatter type="xml" />
        <batchtest todir="${test.report.dir}">
            <fileset dir="${test.src.dir}" includes="**/*Test.java"/>
        </batchtest>
        </junit>
    </target>

</project>
