<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="Mcf framework">
	<property name="dir.lib" value="../lib" />
        <property name="dir.mod" value="../mod" />
	<property name="dir.dest" value="./build/main" />
	<property name="dir.test" value="./build/test" />
	<property name="src.test" value="./test" />
	<property name="test.report.dir" value="report" />
	<property name="dir.javaAPIlib" value="../javaAPIlib" />

	<path id="classpath.dependency">
		<!-- pathelement location="${dir.lib}/modAionBase.jar" / -->
		<!-- pathelement location="${dir.lib}/libnsc.jar" / -->
		<pathelement location="${dir.mod}/modCrypto.jar" />
		<pathelement location="${dir.lib}/slf4j-api-1.7.25.jar" />
		<!-- pathelement location="${dir.lib}/modRlp.jar" / -->
		<pathelement location="${dir.libfile}/commons-collections4-4.0.jar" />
	</path>

	<path id="classpath.test">
		<pathelement location="${dir.lib}/junit_4/junit-4.12.jar" />
		<pathelement location="${dir.lib}/hamcrest/hamcrest-all-1.3.jar" />
		<pathelement location="${dir.lib}/mockito-core-2.12.0.jar" />
                <pathelement location="${dir.lib}/truth-0.36.jar" />
		<pathelement location="${dir.lib}/libnsc.jar" />
		<pathelement location="${dir.lib}/slf4j-api-1.7.25.jar" />
		<pathelement location="${dir.lib}/logback-classic-1.2.3.jar" />
		<pathelement location="${dir.lib}/logback-core-1.2.3.jar" />
                <pathelement location="${dir.lib}/JUnitParams-1.1.1.jar" />
		<pathelement location="${dir.lib}/commons-collections4-4.0.jar" />
		<pathelement location="${dir.lib}/guava-19.0.jar" />
		<pathelement location="${dir.lib}/byte-buddy-1.7.9.jar" />
                <pathelement location="${dir.lib}/libJson.jar" />
                <pathelement location="${dir.lib}/objenesis-2.6.jar" />

		<pathelement location="${dir.mod}/modRlp.jar" />
		<pathelement location="${dir.mod}/modMcf.jar" />
		<pathelement location="${dir.mod}/modAion.jar" />
		<pathelement location="${dir.mod}/modAionBase.jar" />
		<pathelement location="${dir.mod}/modAionImpl.jar" />
		<pathelement location="${dir.mod}/modDbImpl.jar" />
		<pathelement location="${dir.mod}/modLogger.jar" />		
	</path>

	<target name="clean_build" depends="clean">
		<antcall target="build">
			<param name="compile.debug" value="${compile.debug}" />
		</antcall>
	</target>

	<target name="clean">
		<delete dir="${dir.dest}" includeEmptyDirs="true" includes="**/*/" />
		<delete dir="${dir.test}" includeEmptyDirs="true" includes="**/*/" />
		<delete dir="${test.report.dir}" />
		<delete file="${dir.mod}/modMcf.jar" />
	</target>

	<target name="test_build" depends="build">
		<mkdir dir="${dir.test}" />
		<javac debug="on" debuglevel="source,lines,vars" includeantruntime="false" release="9" srcdir="./test" destdir="${dir.test}" includes="**/*Test.java">
			<classpath>
				<path refid="classpath.test" />
				<path refid="classpath.dependency" />
			</classpath>
		</javac>
	</target>

	<target name="ci_test_build" depends="build">
		<mkdir dir="${dir.test}" />
		<javac debug="on" debuglevel="source,lines,vars" includeantruntime="false" release="9" srcdir="./test" destdir="${dir.test}" includes="**/*Test.java">
			<classpath>
				<path refid="classpath.test" />
				<path refid="classpath.dependency" />
			</classpath>
		</javac>
	</target>

	<target name="test" depends="test_build">
		<mkdir dir="${test.report.dir}" />
                <copy includeemptydirs="false" todir="./native/linux/sodium">
                        <fileset dir="../native/linux/sodium"/>
                </copy>
                <copy includeemptydirs="false" todir="./native/linux/blake2b">
                        <fileset dir="../native/linux/blake2b"/>
                </copy>

		<junit printsummary="on" haltonfailure="yes" fork="true">
			<classpath>
				<path refid="classpath.test" />
				<path refid="classpath.dependency" />
				<pathelement location="${dir.test}" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="${src.test}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

	<target name="ci_build" depends="ci_test_build">
		<mkdir dir="${test.report.dir}" />
                <copy includeemptydirs="false" todir="./native/linux/sodium">
                        <fileset dir="../native/linux/sodium"/>
                </copy>
                <copy includeemptydirs="false" todir="./native/linux/blake2b">
                        <fileset dir="../native/linux/blake2b"/>
                </copy>

		<junit printsummary="on" haltonfailure="no" fork="true">
			<classpath>
				<path refid="classpath.test" />
				<path refid="classpath.dependency" />
				<pathelement location="${dir.test}" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="${src.test}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

	<target name="build">
		<echo message="compiling with debug=${compile.debug}" />
		<mkdir dir="${dir.dest}" />
		<javac failonerror="true" debug="${compile.debug}" debuglevel="source,lines,vars" includeantruntime="false" release="9" srcdir="./" destdir="${dir.dest}" includes="src/**/*.java,module-info.java">
			<compilerarg line="--add-modules java.xml" />
			<modulepath>
				<!-- pathelement location="${dir.lib}/libnsc.jar" / -->
				<!-- pathelement location="${dir.lib}/modAionBase.jar" / -->
				<pathelement location="${dir.mod}/modCrypto.jar" />
				<pathelement location="${dir.mod}/modRlp.jar" />
				<pathelement location="${dir.mod}/modAionBase.jar" />
				<pathelement location="${dir.mod}/modLogger.jar" />
                                <pathelement location="${dir.mod}/modDbImpl.jar" />
				<pathelement location="${dir.lib}/slf4j-api-1.7.25.jar" />
				<pathelement location="${dir.lib}/libnsc.jar" />
				<pathelement location="${dir.lib}/commons-collections4-4.0.jar" />
				<pathelement location="${dir.lib}/guava-19.0.jar" />
			</modulepath>
		</javac>

		<jar destfile="modMcf.jar" filesetmanifest="mergewithoutmain" basedir="${dir.dest}" />
		<move includeemptydirs="false" todir="${dir.mod}">
			<file file="modMcf.jar" />
		</move>
	</target>
</project>
