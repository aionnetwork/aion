<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="VM Common Utilities">
  <property name="dir.lib" value="../lib" />
  <property name="dir.mod" value="../mod" />
  <property name="dir.dest" value="./build/main" />
  <property name="dir.test" value="./build/test" />
  <property name="src.test" value="./test" />
  <property name="test.report.dir" value="report" />
  <property name="dir.javaAPIlib" value="../javaAPIlib" />
  <property name="module.name" value="modVM"/>

  <path id="classpath.dependency">
    <pathelement location="${dir.mod}/modAionBase.jar"/>
    <pathelement location="${dir.mod}/modMcf.jar"/>
    <pathelement location="${dir.mod}/modAion.jar"/>
    <pathelement location="${dir.mod}/modCrypto.jar"/>
    <pathelement location="${dir.lib}/slf4j-api-1.7.25.jar"/>
    <pathelement location="${dir.lib}/commons-codec-1.10.jar"/>
    <pathelement location="${dir.lib}/commons-collections4-4.0.jar"/>
    <pathelement location="${dir.lib}/commons-lang3-3.4.jar"/>
  </path>

  <path id="classpath.test">
    <pathelement location="${dir.lib}/junit_4/junit-4.12.jar"/>
    <pathelement location="${dir.lib}/hamcrest/hamcrest-all-1.3.jar"/>
    <pathelement location="${dir.mod}/${module.name}.jar"/>
  </path>

  <target name="clean_build" depends="clean">
     <antcall target="build">
         <param name="compile.debug" value="${compile.debug}"/>
     </antcall>
  </target>

  <target name="clean">
    <delete dir="${dir.dest}" includeEmptyDirs="true" includes="**/*/" />
    <delete dir="${dir.test}" includeEmptyDirs="true" includes="**/*/" />
    <delete dir="${test.report.dir}" />
    <delete file="${dir.mod}/${module.name}.jar" />
  </target>

  <target name="test_build" depends="build">
    <mkdir dir="${dir.test}"/>
    <javac
      debug="on"
      debuglevel="source,lines,vars"
      includeantruntime="false"
      release="10"
      srcdir="./test"
      destdir="${dir.test}"
      includes="**/*Test.java"
    >
    <classpath>
      <path refid="classpath.test"/>
      <path refid="classpath.dependency"/>
    </classpath>
    </javac>
  </target>

  <target name="ci_test_build" depends="build">
    <mkdir dir="${dir.test}"/>
    <javac
      debug="on"
      debuglevel="source,lines,vars"
      includeantruntime="false"
      release="10"
      srcdir="./test"
      destdir="${dir.test}"
      includes="**/*Test.java"
    >
    <classpath>
      <path refid="classpath.test"/>
      <path refid="classpath.dependency"/>
    </classpath>
    </javac>
  </target>

  <target name="test" depends="test_build">
    <mkdir dir="${test.report.dir}" />
    <junit printsummary="on" haltonfailure="yes" fork="true">
      <classpath>
        <path refid="classpath.test"/>
        <path refid="classpath.dependency"/>
        <pathelement location="${dir.test}"/>
      </classpath>
      <formatter type="plain" usefile="false" />
      <formatter type="xml" />
      <batchtest todir="${test.report.dir}">
        <fileset dir="${src.test}" includes="**/*Test.java" />
      </batchtest>
    </junit>
  </target>

  <target name="ci_build" depends="ci_test_build">
    <mkdir dir="${test.report.dir}" />
    <junit printsummary="on" haltonfailure="no" fork="true">
      <classpath>
        <path refid="classpath.test"/>
        <path refid="classpath.dependency"/>
        <pathelement location="${dir.test}"/>
      </classpath>
      <formatter type="plain" usefile="false" />
      <formatter type="xml" />
      <batchtest todir="${test.report.dir}">
        <fileset dir="${src.test}" includes="**/*Test.java" />
      </batchtest>
    </junit>
  </target>

  <target name="build">
    <echo message="compiling with debug=${compile.debug}" />
    <mkdir dir="${dir.dest}"/>
    <javac
      debug="${compile.debug}"
      debuglevel="source,lines,vars"
      includeantruntime="false"
      release="10"
      srcdir="./"
      destdir="${dir.dest}"
      includes="src/**/*.java,module-info.java"
    >
      <modulepath>
        <path refid="classpath.dependency"/>
      </modulepath>
    </javac>

    <jar
      destfile="${module.name}.jar"
      filesetmanifest="mergewithoutmain"
      basedir="${dir.dest}"
    />
    <move includeemptydirs="false" todir="${dir.mod}">
      <file file="${module.name}.jar"/>
    </move>
  </target>
</project>
